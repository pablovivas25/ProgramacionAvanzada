import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class Persona {
	private int  edad;
	
	public Persona(int edad) {
		super();
		this.edad = edad;
	}



	public int getEdad() {
		return edad;
	}



	public void setEdad(int edad) {
		this.edad = edad;
	}



	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + edad;
		return result;
	}



	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Persona other = (Persona) obj;
		if (edad != other.edad)
			return false;
		return true;
	}



	public static void main(String[] args) {
		int []vec= {1,1,3,4,5,6,7,8,6,5,3,2,1,1};
		
		//supongamos que quiero eliminar los repetidos
		
		Set<Integer> sin_duplicados=new HashSet<Integer>();
		
		for(int i=0;i<vec.length;i++)
			sin_duplicados.add(vec[i]);
		
		for ( Integer i: sin_duplicados) {
			System.out.println(i);
		}
		
		System.out.println();
		Persona [] p= {new Persona(20),new Persona(35),new Persona(45),new Persona(45),new Persona(20),new Persona(10)};
		
		//supongamos que quiero eliminar repetidos de personas
		Set<Persona> personas_sin=new HashSet<Persona>();
		
		// Si uso objetos tengo que implementar equals para que no inserte duplicado
		// y para inserte ordenado usar Treset
		for(Persona per:p)
			personas_sin.add(per);
		
		for(Persona p1:personas_sin)
			System.out.println(p1.getEdad());
	

		
	}
}
